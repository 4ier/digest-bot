version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:6.0
    container_name: digest-bot-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: feishu-digest-bot
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - digest-bot-network

  # Feishu Digest Bot application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: digest-bot-app
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017/feishu-digest-bot?authSource=admin
      # Feishu configuration (set in .env file)
      FEISHU_APP_ID: ${FEISHU_APP_ID}
      FEISHU_APP_SECRET: ${FEISHU_APP_SECRET}
      FEISHU_VERIFICATION_TOKEN: ${FEISHU_VERIFICATION_TOKEN}
      FEISHU_ENCRYPT_KEY: ${FEISHU_ENCRYPT_KEY}
      FEISHU_DEFAULT_CHAT_ID: ${FEISHU_DEFAULT_CHAT_ID}
      # AI service configuration
      SILICONFLOW_API_KEY: ${SILICONFLOW_API_KEY}
      SILICONFLOW_BASE_URL: ${SILICONFLOW_BASE_URL:-https://api.siliconflow.cn/v1}
      SILICONFLOW_MODEL: ${SILICONFLOW_MODEL:-deepseek-ai/DeepSeek-R1}
      # Optional OpenAI fallback
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      # Monitoring
      ALERT_WEBHOOK_URL: ${ALERT_WEBHOOK_URL}
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FILE_PATH: logs/app.log
      # Features
      ENABLE_MOCK_DATA: ${ENABLE_MOCK_DATA:-false}
      ENABLE_DAILY_DIGEST: ${ENABLE_DAILY_DIGEST:-true}
      DIGEST_TIME: ${DIGEST_TIME:-20:00}
    volumes:
      - ./logs:/app/logs
    ports:
      - "3000:3000"
    networks:
      - digest-bot-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: digest-bot-nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - digest-bot-network

volumes:
  mongodb_data:
    driver: local

networks:
  digest-bot-network:
    driver: bridge